{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gokulak\\\\Documents\\\\React\\\\my work\\\\Book review application\\\\front-end\\\\src\\\\Components\\\\BookListingPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport BookCard from './BookCard';\nimport './BookListingPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BookListingPage() {\n  _s();\n  const [books, setBooks] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filteredBooks, setFilteredBooks] = useState([]);\n  useEffect(() => {\n    // Fetch books from backend API\n    fetch('http://localhost:5000/api/books').then(response => response.json()).then(data => {\n      console.log('Data received from API:', data);\n      setBooks(data);\n      setFilteredBooks(data);\n    }).catch(error => {\n      console.error('Error fetching books:', error);\n      console.log(error);\n    });\n  }, []);\n\n  // Filter books based on search term\n  useEffect(() => {\n    const filtered = books.filter(book => book.title.toLowerCase().includes(searchTerm.toLowerCase()) || book.author.toLowerCase().includes(searchTerm.toLowerCase()) || book.genre.toLowerCase().includes(searchTerm.toLowerCase()) // Assuming genre is a property of the book object\n    );\n    setFilteredBooks(filtered);\n  }, [books, searchTerm]);\n\n  // Handle search term change\n  const handleSearchChange = e => {\n    setSearchTerm(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"book-listing\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Book Listing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by title, author, or genre\",\n        value: searchTerm,\n        onChange: handleSearchChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"books-grid\",\n      children: filteredBooks.map(book => /*#__PURE__*/_jsxDEV(BookCard, {\n        bookUniqueId: book._id,\n        book: book\n      }, book.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(BookListingPage, \"x55VL8BrP2shLFw/a6RxkNybQ44=\");\n_c = BookListingPage;\nexport default BookListingPage;\nvar _c;\n$RefreshReg$(_c, \"BookListingPage\");","map":{"version":3,"names":["React","useState","useEffect","BookCard","jsxDEV","_jsxDEV","BookListingPage","_s","books","setBooks","searchTerm","setSearchTerm","filteredBooks","setFilteredBooks","fetch","then","response","json","data","console","log","catch","error","filtered","filter","book","title","toLowerCase","includes","author","genre","handleSearchChange","e","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","map","bookUniqueId","_id","id","_c","$RefreshReg$"],"sources":["C:/Users/gokulak/Documents/React/my work/Book review application/front-end/src/Components/BookListingPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport BookCard from './BookCard';\r\nimport './BookListingPage.css';\r\n\r\nfunction BookListingPage() {\r\n  const [books, setBooks] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filteredBooks, setFilteredBooks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch books from backend API\r\n    fetch('http://localhost:5000/api/books')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log('Data received from API:', data);\r\n        setBooks(data);\r\n        setFilteredBooks(data);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching books:', error);\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  // Filter books based on search term\r\n  useEffect(() => {\r\n    const filtered = books.filter(book =>\r\n      book.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      book.author.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      book.genre.toLowerCase().includes(searchTerm.toLowerCase()) // Assuming genre is a property of the book object\r\n    );\r\n    setFilteredBooks(filtered);\r\n  }, [books, searchTerm]);\r\n\r\n  // Handle search term change\r\n  const handleSearchChange = (e) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"book-listing\">\r\n      <h1>Book Listing</h1>\r\n      <div className=\"search-bar\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search by title, author, or genre\"\r\n          value={searchTerm}\r\n          onChange={handleSearchChange}\r\n        />\r\n      </div>\r\n      <div className=\"books-grid\">\r\n        {filteredBooks.map(book => (\r\n          <BookCard key={book.id}  bookUniqueId={book._id} book={book} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BookListingPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}